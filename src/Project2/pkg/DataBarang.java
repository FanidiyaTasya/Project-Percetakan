/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Project2.pkg;

import Connection.pkg.Connect;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author heyitstasyaa
 */
public class DataBarang extends javax.swing.JPanel {

    /**
     * Creates new form DataBarang
     */
    public DataBarang() {
        initComponents();
        Table();
        View();
    }
    private void Table(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("Id Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Jenis Barang");
        model.addColumn("Jumlah Stok");
        model.addColumn("Satuan");

        String Cari = txtSearch.getText();
        try { 
            int no = 1;
            String sql = "SELECT * FROM databarang WHERE IdBarang like '%" + Cari + 
                    "%' or NamaBarang like '%" + Cari + "%' or JenisBarang like '%" + Cari + 
                    "%' or JumlahStok like '%" +Cari+ "%' or Satuan like '%" +Cari+ "%' ORDER BY IdBarang ASC";
            java.sql.Connection conn = (Connection) Connect.configDB();
            java.sql.Statement stat = conn.createStatement();
            java.sql.ResultSet res = stat.executeQuery(sql);
            while (res.next()){
                model.addRow (new Object[]{no++, res.getString(1),
                res.getString(2), res.getString(3), 
                res.getString(4), res.getString(5)});
            }
            Table.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data gagal dipanggil" + e);
        } 
    }
    private void View() {
        Table.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD,14));
        Table.getTableHeader().setOpaque(false);
        Table.setRowHeight(20);
        Table.setForeground(Color.black);
        Table.setSelectionBackground(Color.gray);

        BtnInsert.setBackground(new Color(0,0,0));
        BtnInsert.setBorder(null);
        
        BtnEdit.setBackground(new Color(0,0,0));
        BtnEdit.setBorder(null);
        
        BtnDelete.setBackground(new Color(0,0,0));
        BtnDelete.setBorder(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnDelete = new javax.swing.JButton();
        BtnEdit = new javax.swing.JButton();
        BtnInsert = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnDelete.setBackground(new java.awt.Color(0, 0, 51));
        BtnDelete.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        BtnDelete.setForeground(new java.awt.Color(255, 255, 255));
        BtnDelete.setText("Delete");
        BtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteActionPerformed(evt);
            }
        });
        add(BtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 340, 100, 40));

        BtnEdit.setBackground(new java.awt.Color(0, 0, 51));
        BtnEdit.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        BtnEdit.setForeground(new java.awt.Color(255, 255, 255));
        BtnEdit.setText("Edit");
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        add(BtnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 285, 100, 40));

        BtnInsert.setBackground(new java.awt.Color(0, 0, 51));
        BtnInsert.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        BtnInsert.setForeground(new java.awt.Color(255, 255, 255));
        BtnInsert.setText("Insert");
        BtnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnInsertActionPerformed(evt);
            }
        });
        add(BtnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 230, 100, 40));

        txtSearch.setBackground(new java.awt.Color(238, 238, 241));
        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.setBorder(null);
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, 255, 40));

        jScrollPane1.setBorder(null);

        Table.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Table);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 895, 470));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/pkg/Data Barang.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        Table();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void BtnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnInsertActionPerformed
        setVisible(true);
        new InsertDB().setVisible(true);
    }//GEN-LAST:event_BtnInsertActionPerformed

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        if (Table.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
        }
        EditDB Dt = new EditDB();

        int i = Table.getSelectedRow();
        TableModel tm = Table.getModel();

        String id = tm.getValueAt(i, 1).toString();
        String nama = tm.getValueAt(i, 2).toString();
        String jenis = tm.getValueAt(i, 3).toString();
        String jml = tm.getValueAt(i, 4).toString();
        String satuan = tm.getValueAt(i, 5).toString();

        Dt.txtIdBarang.setText(id);
        Dt.txtIdBarang.disable();
        Dt.txtNamaBarang.setText(nama);
        Dt.txtJenisBarang.setText(jenis);
        Dt.txtJumlahStok.setText(jml);
        Dt.txtJumlahStok.disable();
        Dt.txtSatuan.setText(satuan);

        Dt.setVisible(true);
      //  this.dispose();
        Dt.pack();
    }//GEN-LAST:event_BtnEditActionPerformed

    private void BtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteActionPerformed
        if (Table.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null,"Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
              int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to Delete this data?", "Confirm Deleted",JOptionPane.YES_NO_OPTION);
        if (option == 0) {
        DefaultTableModel model = (DefaultTableModel)Table.getModel();
        int SelectedRowIndex = Table.getSelectedRow();
        String baris = Table.getModel().getValueAt(SelectedRowIndex, 1).toString();
        try {
            String sql = "DELETE FROM databarang WHERE IdBarang ='" + baris +"'";
            java.sql.Connection conn = (Connection) Connect.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(this,"Deleted Succesfully");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        }
        Table();
        }
    }//GEN-LAST:event_BtnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDelete;
    private javax.swing.JButton BtnEdit;
    private javax.swing.JButton BtnInsert;
    private javax.swing.JTable Table;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
